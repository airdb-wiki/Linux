import{_ as l,M as i,p as o,q as r,R as e,t as s,N as a,a1 as t}from"./framework-d81ad7e5.js";const c={},d=e("h1",{id:"bash-programming",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#bash-programming","aria-hidden":"true"},"#"),s(" Bash Programming")],-1),p=e("h2",{id:"学习地址",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#学习地址","aria-hidden":"true"},"#"),s(" 学习地址")],-1),u={href:"http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html",target:"_blank",rel:"noopener noreferrer"},h=e("h2",{id:"编程规范",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#编程规范","aria-hidden":"true"},"#"),s(" 编程规范")],-1),m={href:"https://google.github.io/styleguide/shell.xml",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">#/bin/bash</span></span>
<span class="line"><span style="color:#569CD6;">declare</span><span style="color:#D4D4D4;"> -a conns=(50 100 200 500 1000 1500)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">conn</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">\${conns[@]}</span><span style="color:#D4D4D4;">; </span><span style="color:#C586C0;">do</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">echo</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">$conn</span></span>
<span class="line"><span style="color:#C586C0;">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一些-debug-技巧" tabindex="-1"><a class="header-anchor" href="#一些-debug-技巧" aria-hidden="true">#</a> 一些 Debug 技巧</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">set -x
set -e
export PS4=&#39;+\${BASH_SOURCE}:\${LINENO}:\${FUNCNAME[0]}: &#39;
echo &quot;Today is $(date %Y-%m-%d)&quot;
set +x
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明： PS4 The value of this parameter is expanded as with PS1 and the value is printed before each command bash displays during an execution trace. The first character of PS4 is replicated multiple times, as neces-sary, to indicate multiple levels of indirection. The default is ”+ ”.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>日志输出</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">_log() {
    if [ &quot;$_DEBUG&quot; == &quot;true&quot; ]; then
        echo 1&gt;&amp;2 &quot;$@&quot;
    fi
}

</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,5);function b(D,g){const n=i("ExternalLinkIcon");return o(),r("div",null,[d,p,e("p",null,[e("a",u,[s("BASH Programming - Introduction HOW-TO"),a(n)])]),h,e("p",null,[e("a",m,[s("Google Shell Code Style"),a(n)])]),v])}const y=l(c,[["render",b],["__file","bash-prog.html.vue"]]);export{y as default};
